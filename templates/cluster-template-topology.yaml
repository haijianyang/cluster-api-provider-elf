---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
  name: '${CLUSTER_NAME}'
  namespace: '${NAMESPACE}'
spec:
  topology:
    class: '${CLUSTER_CLASS_NAME}'
    controlPlane:
      replicas: ${CONTROL_PLANE_MACHINE_COUNT}
    variables:
    - name: elfCluster
      value: '${ELF_CLUSTER}'
    - name: infraServer
      value:
        server: '${TOWER_SERVER}'
        username: '${TOWER_USERNAME}'
        password: '${TOWER_PASSWORD}'
    - name: kubeVipPodManifest
      value: |
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - start
            env:
            - name: vip_arp
              value: "true"
            - name: vip_leaderelection
              value: "true"
            - name: vip_interface
              value: ${VIP_NETWORK_INTERFACE="eth0"}
            - name: address
              value: ${CONTROL_PLANE_ENDPOINT_IP}
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            image: ghcr.io/kube-vip/kube-vip:v0.3.5
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - SYS_TIME
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostNetwork: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
              type: FileOrCreate
            name: kubeconfig
        status: {}
    - name: controlPlaneIpAddr
      value: ${CONTROL_PLANE_ENDPOINT_IP}
    - name: imageRepository
      value: registry.cn-hangzhou.aliyuncs.com/google_containers
    version: '${KUBERNETES_VERSION}'
    workers:
      machineDeployments:
      - class: ${CLUSTER_CLASS_NAME}-worker
        metadata: {}
        name: md-0
        replicas: ${WORKER_MACHINE_COUNT}
