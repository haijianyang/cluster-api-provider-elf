---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: '${CLUSTER_NAME}'
  namespace: '${NAMESPACE}'
  labels:
    cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["100.96.0.0/11"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: ElfCluster
    name: '${CLUSTER_NAME}'
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    name: '${CLUSTER_NAME}-control-plane'
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: ElfCluster
metadata:
  name: '${CLUSTER_NAME}'
  namespace: '${NAMESPACE}'
  labels:
    cluster.x-k8s.io/v1alpha3: "v1alpha3"
spec:
  server: '${ELF_SERVER}'
  username: '${ELF_SERVER_USERNAME}'
  password: '${ELF_SERVER_PASSWORD}'
  controlPlaneEndpoint:
    host: '${CONTROL_PLANE_IP}'
    port: 6443
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: ElfMachineTemplate
metadata:
  name: '${CLUSTER_NAME}-control-plane'
  namespace: '${NAMESPACE}'
spec:
  template:
    spec:
      template: '${ELF_TEMPLATE}'
      network:
        preferredAPIServerCidr: 192.168.67.0/20
        devices:
          - networkIndex: 0
            networkType: ipv4
            ipAddrs: '${CONTROL_PLANE_IP}'
            netmask: '${CONTROL_PLANE_NETMASK}'
            gateway: '${CONTROL_PLANE_GATEWAY}'
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: '${CLUSTER_NAME}-control-plane'
  namespace: '${NAMESPACE}'
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: '${KUBERNETES_VERSION}'
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: ElfMachineTemplate
    name: '${CLUSTER_NAME}-control-plane'
  kubeadmConfigSpec:
    clusterConfiguration:
      clusterName: '${CLUSTER_NAME}'
      imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
    preKubeadmCommands:
      - hostname "{{ ds.meta_data.hostname }}"
      - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
      - echo "127.0.0.1   localhost" >>/etc/hosts
      - echo "127.0.0.1   {{ ds.meta_data.hostname }}" >>/etc/hosts
      - echo "{{ ds.meta_data.hostname }}" >/etc/hostname
    verbosity: 5
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: '${CLUSTER_NAME}-md-0'
  namespace: '${NAMESPACE}'
spec:
  template:
    spec:
      verbosity: 5
      clusterConfiguration:
        clusterName: '${CLUSTER_NAME}'
        imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers
      preKubeadmCommands:
        - hostname "{{ ds.meta_data.hostname }}"
        - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
        - echo "127.0.0.1   localhost" >>/etc/hosts
        - echo "127.0.0.1   {{ ds.meta_data.hostname }}" >>/etc/hosts
        - echo "{{ ds.meta_data.hostname }}" >/etc/hostname
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: ElfMachineTemplate
metadata:
  name: '${CLUSTER_NAME}-worker'
  namespace: '${NAMESPACE}'
spec:
  template:
    spec:
      template: '${ELF_TEMPLATE}'
      network:
        preferredAPIServerCidr: 192.168.67.0/20
        devices:
          - networkIndex: 0
            networkType: ipv4_dhcp
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: '${CLUSTER_NAME}-md-0'
  namespace: '${NAMESPACE}'
  labels:
    cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
spec:
  clusterName: '${CLUSTER_NAME}'
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
    spec:
      clusterName: '${CLUSTER_NAME}'
      version: '${KUBERNETES_VERSION}'
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: '${CLUSTER_NAME}-md-0'
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: ElfMachineTemplate
        name: '${CLUSTER_NAME}-worker'
